во задачата со мравките идејата изгледа му е да најде што повеќе дисјунктни патишта но со таа имплементација може да му се шмугнат примери у кои да нема да има две исти ребра ама може да има две исти темиња 
пример патиштата <0,1,3,5,7,8> и <0,2,3,4,5,6,8>  у кодот на андреј ќе се провлечат и ќе направат проблем кога 2 мравки ќе се обидат да влезат во иста соба а само едната ќе влезе и ќе има застој.
жда не збориме за тоа што патиштата кои ги наоѓа не се оптимизирани. понатаму има апсолутно безпотребно сортирање на патиштата по должина.
и на крајот праи некоја формула што не можев да ја разберам кај што numsteps му е бројот на ребра во секој пат a sumsteps му се инкрементира за секој нов пат со numsteps-2 што уште не ја сфаќам логиката зад тоа.
Можел само да пушти форче for(int i=0;i<ants,i+=1+p) кај што p ќе се зголемува кога преку некој пат за првпат ќе се пренесе мравка до целта. 
со овој негов код крајниот резултат се добива апсолутно на среќа, односно решениево е наменето само за графот кој го дал за пример и за никој друг граф.

останатите кодови на андреј се алгоритмите кои ги изучувавме и си се точни нема место за промени

апдејт на репортот:
кога ќе размислам подобро еве што би сменил во другите кодчиња: Никаде не се ослободуваш од меморијата што може да доведе до memory leak доколку имаш поише влезни податоци.
